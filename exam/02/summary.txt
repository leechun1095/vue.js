[ 01 Vue.js 소개 ]
  01-1 Vue.js란?
    ■ Vue.js: 웹 페이지 화면을 개발하기 위한 화면단 라이브러리이자 프런트엔드 프레임워크
      . 점진적인 프레임뭐크(progressive framework) : 명시적렌더링(코어 라이브러리) → 컴포넌트기반 → 클라이언트 사이드 라우팅(프레임워크 기능) → 상태 관리
	□ 프레임워크 시장 속에서 뷰의 위치와 상징성: 2014년 2월 처음 공식 배포된 이후로 시장 점유율은 상대적으로 낮지만, 가파른 성장세를 보이며 깃허브(Github) 리포지터리의 별 개수가 많은 인기 많은 프레임워크
    □ 뷰의 장점: 1) 배우기 쉬움 | 2) 리액트와 앵귤러에 비해 성능이 우수하고 빠름 | 3) 리액트의 장점과 앵귤러의 장점을 보유
  01-2 Vue.js의 특징
    ■ UI 화면단 라이브러리: UI화면 개발 방법 중 하나인 MVVM 패턴의 뷰 모델(ViewModel)에 해당하는 화면단 라이브러리
	  . MVVM 패턴: 화면을 모델(Model) - 뷰(View) - 뷰 모델(ViewModel)로 구조화하여 개발하는 방식
	    1) 뷰(View): 사용자에게 보이는 화면
		2) 돔(DOM): HTML문서에 들어가는 요소(태그, 클래스, 속성 등)의 정보를 담고 있는 데이터 트리
		3) 돔 리스너(DOM Listener): 돔의 변경 내역에 대해 즉각적으로 반응하여 특정 로직을 수행하는 장치
		4) 모델(Model): 데이터를 담는 용기. 보통은 서버에서 가져온 데이터를 자바스크립트 객체형태로 저장
		5) 데이터 바인딩(Data Binding) : 뷰에 표시되는 내용과 모델의 데이터를 동기화
		6) 뷰 모델(ViewModel): 뷰와 모델의 중간 영역. 돔 리스너와 데이터 바인딩을 제공하는 영역
    □ 컴포넌트(Component) 기반 프레임워크: 코드를 재사용하기가 쉽고, 컴포넌트를 썼을 때 HTML 코드에서 화면의 구조를 직관적으로 파악이 가능
	□ 리액트와 앵귤러의 장점을 가진 프레임워크: 앵귤러의 양방향 데이터 바인딩(Two-way Data Binding)과 리액트의 단방향 데이터 흐름(One-way Data Flow), 가상 돔(Virtual DOM) 랜더링의 장점을 모두 결합한 프레임워크
      . 양방향 데이터 바인딩: 화면에 표시되는 값과 프레임워크의 모델 데이터 값이 동기화되어 한쪽이 변경되면 다른 한쪽도 자동으로 변경되는 것
	  . 단방향 데이터 흐름: 컴포넌트 간에 데이터를 전달할 때 항상 상위 컴포넌트에서 하위 컴포넌트 한 방향으로만 전달하게끔 구조화

[ 02 개발 환경 설정 및 첫 번째 프로젝트 ]
  02-1 뷰 학습을 위한 개발 환경 설정
    ■ 도구: 크롬 브라우저 | 아톰(Atom) 텍스트 에디터 | 노드제이에스(Node.js) | 뷰 개발자 도구(Vue.js devtools, 크롬 확장 플러그인)
	  . Atom을 제외한 도구들은 기존에 설치한 경험이 있어서 Atom 관련된 내용을 중점으로 정리
	□ Atom 설치 방법
	  1) atom 으로 검색: https://github.com/atom/atom/releases
	  2) atom-x64-windows.zip 다운로드
	  3) E:\Atom 에 Atom x64 폴더명으로 압축 해제
    □ Atom 패키지/테마 검색 방법
	  1) 하기 내용으로 검색 ( atom packages, atom theme )
	  2) 사이트로 진입 후, 아래 내용 검색 ( theme, packages )
	    . 테마: seti-ui | atom-material-syntax-dark
		. 패키지: language-vue
	  3) 받은 파일 하기 폴더명으로 해제: C:\Users\Administrator\.atom\packages
	    . seti-ui
		. atom-material-syntax-dark
		. atom-vue
	□ Atom 에서 적용
	  . UI Theme: Seti
	  . Syntax Theme: Atom Material Dark
	  . Packages: atom-vue
  02-2 Hello Vue.js! 프로젝트 만들기
    ■ 뷰 시작하기: HTML 파일 생성 → 뷰 소스 코드 추가 → 브라우저로 실행
	□ 크롬 개발자 도구로 코드 확인하기(F12): 브라우저 주소 창 옆 설정 버튼(:) → [도구 더보기 → 개발자 도구]
	□ 뷰 개발자 도구로 코드 확인하기: 브라우저 주소 창 옆 설정 버튼(:) → [도구 더보기 → 확장 프로그램] → Vue.js devtools → '파일 URL에 대한 엑세스 허용' 체크
	□ 뷰 개발자 도구 사용 방법: 크롬 개발자 도구 → Vue탭 → '<Root>==$vm0' 클릭 → 'Vuex', 'Events', 'Refresh'탭을 통해 해당 기능들에 대한 상태 확인
	  . 화면에 표시된 'Hello Vue.js!' 텍스트는 최상위 컴포넌트의 data 속성인 message의 값
